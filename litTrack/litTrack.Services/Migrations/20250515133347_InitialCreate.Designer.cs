// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using litTrack.Services.Database;

#nullable disable

namespace litTrack.Services.Migrations
{
    [DbContext(typeof(_210078Context))]
    [Migration("20250515133347_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("litTrack.Services.Database.Arhiva", b =>
                {
                    b.Property<int>("ArhivaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArhivaId"));

                    b.Property<DateTime>("DatumDodavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("ArhivaId")
                        .HasName("PK__Arhiva__A791E50CEDF81B55");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Arhiva", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.Autor", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutorId"));

                    b.Property<string>("Biografija")
                        .HasColumnType("text");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("AutorId")
                        .HasName("PK__Autor__F58AE929C01DC9E3");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.CiljnaGrupa", b =>
                {
                    b.Property<int>("CiljnaGrupaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiljnaGrupaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("CiljnaGrupaId")
                        .HasName("PK__CiljnaGr__98C63198BEBC86D0");

                    b.ToTable("CiljnaGrupa", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.Knjiga", b =>
                {
                    b.Property<int>("KnjigaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnjigaId"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("GodinaIzdavanja")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("KnjigaId")
                        .HasName("PK__Knjiga__4A1281F35F8B0735");

                    b.HasIndex("AutorId");

                    b.ToTable("Knjiga", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.KnjigaCiljnaGrupa", b =>
                {
                    b.Property<int>("KnjigaCiljnaGrupaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnjigaCiljnaGrupaId"));

                    b.Property<int>("CiljnaGrupaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("KnjigaCiljnaGrupaId")
                        .HasName("PK__KnjigaCi__4EFEF21ACEDB5D78");

                    b.HasIndex("CiljnaGrupaId");

                    b.HasIndex("KnjigaId");

                    b.ToTable("KnjigaCiljnaGrupa", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.KnjigaZanr", b =>
                {
                    b.Property<int>("KnjigaZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnjigaZanrId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.Property<int>("ZanrId")
                        .HasColumnType("int");

                    b.HasKey("KnjigaZanrId")
                        .HasName("PK__KnjigaZa__C9603E085A499ECB");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("ZanrId");

                    b.ToTable("KnjigaZanr", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<DateTime>("DatumRegistracije")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("JeAktivan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnik__80B06D419B1DE257");

                    b.HasIndex(new[] { "KorisnickoIme" }, "UQ__Korisnik__992E6F92884A89AE")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Korisnik__A9D10534846D507F")
                        .IsUnique();

                    b.ToTable("Korisnik", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.KorisnikUloga", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikUlogaId"));

                    b.Property<DateTime>("DatumDodavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("KorisnikUlogaId")
                        .HasName("PK__Korisnik__1608726E1E4EFB68");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisnikUloga", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.LicnaPreporuka", b =>
                {
                    b.Property<int>("LicnaPreporukaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicnaPreporukaId"));

                    b.Property<DateTime>("DatumPreporuke")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("JePogledana")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikPosiljalacId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikPrimalacId")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Poruka")
                        .HasColumnType("text");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("LicnaPreporukaId")
                        .HasName("PK__LicnaPre__661F4B6FB47AC50A");

                    b.HasIndex("KorisnikPosiljalacId");

                    b.HasIndex("KorisnikPrimalacId");

                    b.ToTable("LicnaPreporuka", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.LicnaPreporukaKnjiga", b =>
                {
                    b.Property<int>("LicnaPreporukaKnjigaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicnaPreporukaKnjigaId"));

                    b.Property<DateTime>("DatumDodavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<int>("LicnaPreporukaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("LicnaPreporukaKnjigaId")
                        .HasName("PK__LicnaPre__F239CF61704965BA");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("LicnaPreporukaId");

                    b.ToTable("LicnaPreporukaKnjiga", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.MojaListum", b =>
                {
                    b.Property<int>("MojaListaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MojaListaId"));

                    b.Property<DateTime>("DatumDodavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("JeProcitana")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("MojaListaId")
                        .HasName("PK__MojaList__66014D0C51AC6E88");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("MojaLista");
                });

            modelBuilder.Entity("litTrack.Services.Database.NacinPlacanja", b =>
                {
                    b.Property<int>("NacinPlacanjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NacinPlacanjaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("NacinPlacanjaId")
                        .HasName("PK__NacinPla__AD0C4729CE104513");

                    b.ToTable("NacinPlacanja", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NarudzbaId"));

                    b.Property<DateTime>("DatumNarudzbe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("NacinPlacanjaId")
                        .HasColumnType("int");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("UkupnaCijena")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("NarudzbaId")
                        .HasName("PK__Narudzba__FBEC1377C971AA25");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("NacinPlacanjaId");

                    b.ToTable("Narudzba", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.Obavijest", b =>
                {
                    b.Property<int>("ObavijestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObavijestId"));

                    b.Property<DateTime>("DatumObavijesti")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("JePogledana")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("ObavijestId")
                        .HasName("PK__Obavijes__99D330E0C7775465");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Obavijest", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.Ocjena", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OcjenaId"));

                    b.Property<DateTime>("DatumOcjenjivanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("Vrijednost")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("OcjenaId")
                        .HasName("PK__Ocjena__E6FC7AA976F0339E");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Ocjena", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.Preporuka", b =>
                {
                    b.Property<int>("PreporukaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreporukaId"));

                    b.Property<DateTime>("DatumPreporuke")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("PreporukaId")
                        .HasName("PK__Preporuk__6AE7EE0836B67ED2");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Preporuka", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.Recenzija", b =>
                {
                    b.Property<int>("RecenzijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecenzijaId"));

                    b.Property<int>("BrojDislajkova")
                        .HasColumnType("int");

                    b.Property<int>("BrojLajkova")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumDodavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("RecenzijaId")
                        .HasName("PK__Recenzij__D36C60706A202B0F");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Recenzija", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.RecenzijaOdgovor", b =>
                {
                    b.Property<int>("RecenzijaOdgovorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecenzijaOdgovorId"));

                    b.Property<int>("BrojDislajkova")
                        .HasColumnType("int");

                    b.Property<int>("BrojLajkova")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumDodavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("RecenzijaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("RecenzijaOdgovorId")
                        .HasName("PK__Recenzij__23922A442E357E94");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RecenzijaId");

                    b.ToTable("RecenzijaOdgovor", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.RecenzijaOdgovorReakcija", b =>
                {
                    b.Property<int>("RecenzijaOdgovorReakcijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecenzijaOdgovorReakcijaId"));

                    b.Property<DateTime>("DatumReakcije")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("JeLajk")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("RecenzijaOdgovorId")
                        .HasColumnType("int");

                    b.HasKey("RecenzijaOdgovorReakcijaId")
                        .HasName("PK__Recenzij__BA973BC71C722F2F");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RecenzijaOdgovorId");

                    b.ToTable("RecenzijaOdgovorReakcija", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.RecenzijaReakcija", b =>
                {
                    b.Property<int>("RecenzijaReakcijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecenzijaReakcijaId"));

                    b.Property<DateTime>("DatumReakcije")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("JeLajk")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("RecenzijaId")
                        .HasColumnType("int");

                    b.HasKey("RecenzijaReakcijaId")
                        .HasName("PK__Recenzij__7B1C616CADF19167");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RecenzijaId");

                    b.ToTable("RecenzijaReakcija", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.StavkaNarudzbe", b =>
                {
                    b.Property<int>("StavkaNarudzbeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StavkaNarudzbeId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("StavkaNarudzbeId")
                        .HasName("PK__StavkaNa__39E50D70A9D88EC6");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("StavkaNarudzbe", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloga__DCAB23CB383B19E2");

                    b.ToTable("Uloga", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.Zanr", b =>
                {
                    b.Property<int>("ZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZanrId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("ZanrId")
                        .HasName("PK__Zanr__953868D3C3D2169D");

                    b.ToTable("Zanr", (string)null);
                });

            modelBuilder.Entity("litTrack.Services.Database.Arhiva", b =>
                {
                    b.HasOne("litTrack.Services.Database.Knjiga", "Knjiga")
                        .WithMany("Arhivas")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FK__Arhiva__KnjigaId__787EE5A0");

                    b.HasOne("litTrack.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Arhivas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Arhiva__Korisnik__778AC167");

                    b.Navigation("Knjiga");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("litTrack.Services.Database.Knjiga", b =>
                {
                    b.HasOne("litTrack.Services.Database.Autor", "Autor")
                        .WithMany("Knjigas")
                        .HasForeignKey("AutorId")
                        .IsRequired()
                        .HasConstraintName("FK__Knjiga__AutorId__4CA06362");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("litTrack.Services.Database.KnjigaCiljnaGrupa", b =>
                {
                    b.HasOne("litTrack.Services.Database.CiljnaGrupa", "CiljnaGrupa")
                        .WithMany("KnjigaCiljnaGrupas")
                        .HasForeignKey("CiljnaGrupaId")
                        .IsRequired()
                        .HasConstraintName("FK__KnjigaCil__Ciljn__17F790F9");

                    b.HasOne("litTrack.Services.Database.Knjiga", "Knjiga")
                        .WithMany("KnjigaCiljnaGrupas")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FK__KnjigaCil__Knjig__18EBB532");

                    b.Navigation("CiljnaGrupa");

                    b.Navigation("Knjiga");
                });

            modelBuilder.Entity("litTrack.Services.Database.KnjigaZanr", b =>
                {
                    b.HasOne("litTrack.Services.Database.Knjiga", "Knjiga")
                        .WithMany("KnjigaZanrs")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FK__KnjigaZan__Knjig__1CBC4616");

                    b.HasOne("litTrack.Services.Database.Zanr", "Zanr")
                        .WithMany("KnjigaZanrs")
                        .HasForeignKey("ZanrId")
                        .IsRequired()
                        .HasConstraintName("FK__KnjigaZan__ZanrI__1DB06A4F");

                    b.Navigation("Knjiga");

                    b.Navigation("Zanr");
                });

            modelBuilder.Entity("litTrack.Services.Database.KorisnikUloga", b =>
                {
                    b.HasOne("litTrack.Services.Database.Korisnik", "Korisnik")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__KorisnikU__Koris__412EB0B6");

                    b.HasOne("litTrack.Services.Database.Uloga", "Uloga")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("UlogaId")
                        .IsRequired()
                        .HasConstraintName("FK__KorisnikU__Uloga__4222D4EF");

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("litTrack.Services.Database.LicnaPreporuka", b =>
                {
                    b.HasOne("litTrack.Services.Database.Korisnik", "KorisnikPosiljalac")
                        .WithMany("LicnaPreporukaKorisnikPosiljalacs")
                        .HasForeignKey("KorisnikPosiljalacId")
                        .IsRequired()
                        .HasConstraintName("FK__LicnaPrep__Koris__02FC7413");

                    b.HasOne("litTrack.Services.Database.Korisnik", "KorisnikPrimalac")
                        .WithMany("LicnaPreporukaKorisnikPrimalacs")
                        .HasForeignKey("KorisnikPrimalacId")
                        .IsRequired()
                        .HasConstraintName("FK__LicnaPrep__Koris__03F0984C");

                    b.Navigation("KorisnikPosiljalac");

                    b.Navigation("KorisnikPrimalac");
                });

            modelBuilder.Entity("litTrack.Services.Database.LicnaPreporukaKnjiga", b =>
                {
                    b.HasOne("litTrack.Services.Database.Knjiga", "Knjiga")
                        .WithMany("LicnaPreporukaKnjigas")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FK__LicnaPrep__Knjig__09A971A2");

                    b.HasOne("litTrack.Services.Database.LicnaPreporuka", "LicnaPreporuka")
                        .WithMany("LicnaPreporukaKnjigas")
                        .HasForeignKey("LicnaPreporukaId")
                        .IsRequired()
                        .HasConstraintName("FK__LicnaPrep__Licna__0A9D95DB");

                    b.Navigation("Knjiga");

                    b.Navigation("LicnaPreporuka");
                });

            modelBuilder.Entity("litTrack.Services.Database.MojaListum", b =>
                {
                    b.HasOne("litTrack.Services.Database.Knjiga", "Knjiga")
                        .WithMany("MojaLista")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FK__MojaLista__Knjig__71D1E811");

                    b.HasOne("litTrack.Services.Database.Korisnik", "Korisnik")
                        .WithMany("MojaLista")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__MojaLista__Koris__70DDC3D8");

                    b.Navigation("Knjiga");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("litTrack.Services.Database.Narudzba", b =>
                {
                    b.HasOne("litTrack.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Narudzbas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Narudzba__Korisn__245D67DE");

                    b.HasOne("litTrack.Services.Database.NacinPlacanja", "NacinPlacanja")
                        .WithMany("Narudzbas")
                        .HasForeignKey("NacinPlacanjaId")
                        .IsRequired()
                        .HasConstraintName("FK__Narudzba__NacinP__25518C17");

                    b.Navigation("Korisnik");

                    b.Navigation("NacinPlacanja");
                });

            modelBuilder.Entity("litTrack.Services.Database.Obavijest", b =>
                {
                    b.HasOne("litTrack.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Obavijests")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Obavijest__Koris__0F624AF8");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("litTrack.Services.Database.Ocjena", b =>
                {
                    b.HasOne("litTrack.Services.Database.Knjiga", "Knjiga")
                        .WithMany("Ocjenas")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FK__Ocjena__KnjigaId__5165187F");

                    b.HasOne("litTrack.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Ocjenas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Ocjena__Korisnik__52593CB8");

                    b.Navigation("Knjiga");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("litTrack.Services.Database.Preporuka", b =>
                {
                    b.HasOne("litTrack.Services.Database.Knjiga", "Knjiga")
                        .WithMany("Preporukas")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FK__Preporuka__Knjig__7E37BEF6");

                    b.HasOne("litTrack.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Preporukas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Preporuka__Koris__7D439ABD");

                    b.Navigation("Knjiga");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("litTrack.Services.Database.Recenzija", b =>
                {
                    b.HasOne("litTrack.Services.Database.Knjiga", "Knjiga")
                        .WithMany("Recenzijas")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Knjig__59063A47");

                    b.HasOne("litTrack.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Recenzijas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Koris__5812160E");

                    b.Navigation("Knjiga");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("litTrack.Services.Database.RecenzijaOdgovor", b =>
                {
                    b.HasOne("litTrack.Services.Database.Korisnik", "Korisnik")
                        .WithMany("RecenzijaOdgovors")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Koris__60A75C0F");

                    b.HasOne("litTrack.Services.Database.Recenzija", "Recenzija")
                        .WithMany("RecenzijaOdgovors")
                        .HasForeignKey("RecenzijaId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Recen__5FB337D6");

                    b.Navigation("Korisnik");

                    b.Navigation("Recenzija");
                });

            modelBuilder.Entity("litTrack.Services.Database.RecenzijaOdgovorReakcija", b =>
                {
                    b.HasOne("litTrack.Services.Database.Korisnik", "Korisnik")
                        .WithMany("RecenzijaOdgovorReakcijas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Koris__6D0D32F4");

                    b.HasOne("litTrack.Services.Database.RecenzijaOdgovor", "RecenzijaOdgovor")
                        .WithMany("RecenzijaOdgovorReakcijas")
                        .HasForeignKey("RecenzijaOdgovorId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Recen__6C190EBB");

                    b.Navigation("Korisnik");

                    b.Navigation("RecenzijaOdgovor");
                });

            modelBuilder.Entity("litTrack.Services.Database.RecenzijaReakcija", b =>
                {
                    b.HasOne("litTrack.Services.Database.Korisnik", "Korisnik")
                        .WithMany("RecenzijaReakcijas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Koris__68487DD7");

                    b.HasOne("litTrack.Services.Database.Recenzija", "Recenzija")
                        .WithMany("RecenzijaReakcijas")
                        .HasForeignKey("RecenzijaId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Recen__6754599E");

                    b.Navigation("Korisnik");

                    b.Navigation("Recenzija");
                });

            modelBuilder.Entity("litTrack.Services.Database.StavkaNarudzbe", b =>
                {
                    b.HasOne("litTrack.Services.Database.Knjiga", "Knjiga")
                        .WithMany("StavkaNarudzbes")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FK__StavkaNar__Knjig__2BFE89A6");

                    b.HasOne("litTrack.Services.Database.Narudzba", "Narudzba")
                        .WithMany("StavkaNarudzbes")
                        .HasForeignKey("NarudzbaId")
                        .IsRequired()
                        .HasConstraintName("FK__StavkaNar__Narud__2B0A656D");

                    b.Navigation("Knjiga");

                    b.Navigation("Narudzba");
                });

            modelBuilder.Entity("litTrack.Services.Database.Autor", b =>
                {
                    b.Navigation("Knjigas");
                });

            modelBuilder.Entity("litTrack.Services.Database.CiljnaGrupa", b =>
                {
                    b.Navigation("KnjigaCiljnaGrupas");
                });

            modelBuilder.Entity("litTrack.Services.Database.Knjiga", b =>
                {
                    b.Navigation("Arhivas");

                    b.Navigation("KnjigaCiljnaGrupas");

                    b.Navigation("KnjigaZanrs");

                    b.Navigation("LicnaPreporukaKnjigas");

                    b.Navigation("MojaLista");

                    b.Navigation("Ocjenas");

                    b.Navigation("Preporukas");

                    b.Navigation("Recenzijas");

                    b.Navigation("StavkaNarudzbes");
                });

            modelBuilder.Entity("litTrack.Services.Database.Korisnik", b =>
                {
                    b.Navigation("Arhivas");

                    b.Navigation("KorisnikUlogas");

                    b.Navigation("LicnaPreporukaKorisnikPosiljalacs");

                    b.Navigation("LicnaPreporukaKorisnikPrimalacs");

                    b.Navigation("MojaLista");

                    b.Navigation("Narudzbas");

                    b.Navigation("Obavijests");

                    b.Navigation("Ocjenas");

                    b.Navigation("Preporukas");

                    b.Navigation("RecenzijaOdgovorReakcijas");

                    b.Navigation("RecenzijaOdgovors");

                    b.Navigation("RecenzijaReakcijas");

                    b.Navigation("Recenzijas");
                });

            modelBuilder.Entity("litTrack.Services.Database.LicnaPreporuka", b =>
                {
                    b.Navigation("LicnaPreporukaKnjigas");
                });

            modelBuilder.Entity("litTrack.Services.Database.NacinPlacanja", b =>
                {
                    b.Navigation("Narudzbas");
                });

            modelBuilder.Entity("litTrack.Services.Database.Narudzba", b =>
                {
                    b.Navigation("StavkaNarudzbes");
                });

            modelBuilder.Entity("litTrack.Services.Database.Recenzija", b =>
                {
                    b.Navigation("RecenzijaOdgovors");

                    b.Navigation("RecenzijaReakcijas");
                });

            modelBuilder.Entity("litTrack.Services.Database.RecenzijaOdgovor", b =>
                {
                    b.Navigation("RecenzijaOdgovorReakcijas");
                });

            modelBuilder.Entity("litTrack.Services.Database.Uloga", b =>
                {
                    b.Navigation("KorisnikUlogas");
                });

            modelBuilder.Entity("litTrack.Services.Database.Zanr", b =>
                {
                    b.Navigation("KnjigaZanrs");
                });
#pragma warning restore 612, 618
        }
    }
}
